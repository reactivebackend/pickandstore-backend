generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum DeletionStatus {
  NotDeleted
  Deleted
}

model User {
  id             Int            @id @default(autoincrement())
  username       String         @unique
  email          String         @unique
  passwordHash   String?
  deletionStatus DeletionStatus @default(NotDeleted)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  userMetadata   UserMetadata?  @relation("UserMetadata")
  authAccounts   AuthAccount[]  @relation("AuthAccounts")
  devices        Device[]       @relation("Devices")
}

model UserMetadata {
  userId                      Int       @id
  user                        User      @relation("UserMetadata", fields: [userId], references: [id])
  emailConfirmationCode       String?   @db.VarChar(255)
  emailConfirmationExpiration DateTime?
  isEmailConfirmed            Boolean   @default(false)
  passwordRecoveryCode        String?   @db.VarChar(255)
  passwordRecoveryExpiration  DateTime?
}

model AuthAccount {
  id           Int      @id @default(autoincrement())
  provider     String
  providerId   String
  userId       Int
  user         User     @relation("AuthAccounts", fields: [userId], references: [id])
  createdAt    DateTime @default(now())

  @@unique([provider, providerId])
}

model Post {
  id        String   @id @default(uuid())
  title     String
  content   String
  createdAt DateTime @default(now())
}

model Device {
  id             String    @id @db.Uuid
  userId         Int
  title          String
  ip             String
  lastActiveDate DateTime
  expirationDate DateTime
  deletionStatus DeletionStatus @default(NotDeleted)
  user           User   @relation("Devices", fields: [userId], references: [id])
}
